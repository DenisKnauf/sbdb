Bdb
===

Your need first this library:

http://github.com/DenisKnauf/bdb

Download
========

via git:

	git clone git://github.com/DenisKnauf/sbdb.git

Installation
============

	cd sbdb
	gem install sbdb-0.0.5.gem

Documentation
=============

Doesn't exist yet.

Usage
=====

First, open environment and database

	require 'sbdb'
	Dir.mkdir 'newenv'  rescue Errno::EEXIST
	env = SBDB::Env.new 'newenv', SBDB::CREATE
	db = env.open SBDB::Btree, 'newdb.db', 'mynewdb', SBDB::CREATE

It works nearly like a Ruby-Hash:

	db['key'] = 'value'
	db['key']		# => 'value'
	db.to_hash		# => {'key'=>'value'}
	db.map {|k, v| [k, v].join ' => '}		# => ["key => value"]
	db.count		# => 1

*SBDB::DB#each* uses a *SBDB::Cursor*:

	cursor = db.cursor
	cursor.each {|k,v| puts "#{k}: ${v}" }

Don't forget to close everything, you opened!

	cursor.close
	db.close
	env.close

But you can use a *lambda* to ensure to close everything:

	SBDB::Env.new( 'newenv', SBDB::CREATE) do |env|
		env.open SBDB::Btree, 'newdb.db', 'mynewdb', SBDB::CREATE do |db|
			db.to_hash
		end
	end

*SBDB::DB#to_hash* creates a cursor and close it later.
